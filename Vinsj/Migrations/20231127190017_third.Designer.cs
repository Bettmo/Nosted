// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Vinsj.Data;

#nullable disable

namespace Vinsj.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231127190017_third")]
    partial class third
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Vinsj.Models.Funksjons_test", b =>
                {
                    b.Property<int>("ServiceOrdreID_FK")
                        .HasColumnType("integer");

                    b.Property<float>("Bremsekraft")
                        .HasColumnType("real");

                    b.Property<string>("TestVinsj")
                        .HasColumnType("text");

                    b.Property<float>("Trekkraft")
                        .HasColumnType("real");

                    b.HasKey("ServiceOrdreID_FK");

                    b.ToTable("FunksjonsTests");
                });

            modelBuilder.Entity("Vinsj.Models.Komponent_service", b =>
                {
                    b.Property<int>("ServiceOrdreID_FK")
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    b.Property<string>("Komponent")
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.Property<string>("Avdeling")
                        .HasColumnType("text");

                    b.Property<string>("Komponent_Status")
                        .HasColumnType("text");

                    b.HasKey("ServiceOrdreID_FK", "Komponent");

                    b.ToTable("KomponentServices");
                });

            modelBuilder.Entity("Vinsj.Models.Kunde_informasjon", b =>
                {
                    b.Property<int>("ServiceOrdreIDFK")
                        .HasColumnType("integer");

                    b.Property<string>("Adresse")
                        .HasColumnType("text");

                    b.Property<string>("Epost")
                        .HasColumnType("text");

                    b.Property<string>("Kunde")
                        .HasColumnType("text");

                    b.Property<int>("Telefon")
                        .HasColumnType("integer");

                    b.HasKey("ServiceOrdreIDFK");

                    b.ToTable("KundeInformasjons");
                });

            modelBuilder.Entity("Vinsj.Models.Produkt_informasjon", b =>
                {
                    b.Property<int>("ServiceOrdreIDFK")
                        .HasColumnType("integer");

                    b.Property<int>("Arsmodell")
                        .HasColumnType("integer");

                    b.Property<string>("DatoMottat")
                        .HasColumnType("text");

                    b.Property<string>("Garanti")
                        .HasColumnType("text");

                    b.Property<string>("ProduktType")
                        .HasColumnType("text");

                    b.Property<string>("Serienummer")
                        .HasColumnType("text");

                    b.HasKey("ServiceOrdreIDFK");

                    b.ToTable("ProduktInformasjons");
                });

            modelBuilder.Entity("Vinsj.Models.ServiceOrdre", b =>
                {
                    b.Property<int>("ServiceOrdreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ServiceOrdreID"));

                    b.HasKey("ServiceOrdreID");

                    b.ToTable("ServiceOrdres");
                });

            modelBuilder.Entity("Vinsj.Models.ServiceSkjema", b =>
                {
                    b.Property<int>("ServiceOrdreIDFK")
                        .HasColumnType("integer");

                    b.Property<int>("AbreidsTimer")
                        .HasColumnType("integer");

                    b.Property<string>("AvtaltKunde")
                        .HasColumnType("text");

                    b.Property<string>("DelerBrukt")
                        .HasColumnType("text");

                    b.Property<string>("DelerRetunert")
                        .HasColumnType("text");

                    b.Property<string>("FerdigDato")
                        .HasColumnType("text");

                    b.Property<string>("ForsendelseMate")
                        .HasColumnType("text");

                    b.Property<string>("RepBeskrivelse")
                        .HasColumnType("text");

                    b.Property<string>("SignKunde")
                        .HasColumnType("text");

                    b.Property<string>("SignRep")
                        .HasColumnType("text");

                    b.HasKey("ServiceOrdreIDFK");

                    b.ToTable("ServiceSkjemas");
                });

            modelBuilder.Entity("Vinsj.Models.SignaturerModel", b =>
                {
                    b.Property<int>("ServiceOrdreIDFK")
                        .HasColumnType("integer");

                    b.Property<string>("Dato")
                        .HasColumnType("text");

                    b.Property<string>("Kommentar")
                        .HasColumnType("text");

                    b.Property<string>("Signatur")
                        .HasColumnType("text");

                    b.HasKey("ServiceOrdreIDFK");

                    b.ToTable("SignaturerModels");
                });

            modelBuilder.Entity("Vinsj.Models.trykk_settinger", b =>
                {
                    b.Property<int>("ServiceOrdreID_FK")
                        .HasColumnType("integer");

                    b.Property<float>("Bar")
                        .HasColumnType("real");

                    b.HasKey("ServiceOrdreID_FK");

                    b.ToTable("TrykkSettingers");
                });

            modelBuilder.Entity("Vinsj.Models.Funksjons_test", b =>
                {
                    b.HasOne("Vinsj.Models.ServiceOrdre", "ServiceOrdre")
                        .WithMany("FunksjonsTests")
                        .HasForeignKey("ServiceOrdreID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceOrdre");
                });

            modelBuilder.Entity("Vinsj.Models.Komponent_service", b =>
                {
                    b.HasOne("Vinsj.Models.ServiceOrdre", "ServiceOrdre")
                        .WithMany("KomponentServices")
                        .HasForeignKey("ServiceOrdreID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceOrdre");
                });

            modelBuilder.Entity("Vinsj.Models.Kunde_informasjon", b =>
                {
                    b.HasOne("Vinsj.Models.ServiceOrdre", "ServiceOrdre")
                        .WithMany("KundeInformasjons")
                        .HasForeignKey("ServiceOrdreIDFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceOrdre");
                });

            modelBuilder.Entity("Vinsj.Models.Produkt_informasjon", b =>
                {
                    b.HasOne("Vinsj.Models.ServiceOrdre", "ServiceOrdre")
                        .WithMany("ProduktInformasjons")
                        .HasForeignKey("ServiceOrdreIDFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceOrdre");
                });

            modelBuilder.Entity("Vinsj.Models.ServiceSkjema", b =>
                {
                    b.HasOne("Vinsj.Models.ServiceOrdre", "ServiceOrdre")
                        .WithMany("ServiceSkjemas")
                        .HasForeignKey("ServiceOrdreIDFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceOrdre");
                });

            modelBuilder.Entity("Vinsj.Models.SignaturerModel", b =>
                {
                    b.HasOne("Vinsj.Models.ServiceOrdre", "ServiceOrdre")
                        .WithMany("SignaturerModels")
                        .HasForeignKey("ServiceOrdreIDFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceOrdre");
                });

            modelBuilder.Entity("Vinsj.Models.trykk_settinger", b =>
                {
                    b.HasOne("Vinsj.Models.ServiceOrdre", "ServiceOrdre")
                        .WithMany("TrykkSettingers")
                        .HasForeignKey("ServiceOrdreID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceOrdre");
                });

            modelBuilder.Entity("Vinsj.Models.ServiceOrdre", b =>
                {
                    b.Navigation("FunksjonsTests");

                    b.Navigation("KomponentServices");

                    b.Navigation("KundeInformasjons");

                    b.Navigation("ProduktInformasjons");

                    b.Navigation("ServiceSkjemas");

                    b.Navigation("SignaturerModels");

                    b.Navigation("TrykkSettingers");
                });
#pragma warning restore 612, 618
        }
    }
}
